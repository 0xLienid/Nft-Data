{"version":3,"sources":["projects.js","helpers/downloadAgg.js","helpers/getProjectData.js","components/DownloadCSV.jsx","components/Chart.jsx","Views/AllNfts/AllNfts.jsx","Views/NftsByCategory/NftsByCategory.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["projects","project","chain","weeklyFromDaily","dailyData","splice","length","weeklyData","currData","volume","day","i","push","axios","defaults","headers","post","getProjectData","marketplace","a","get","marketplaceData","formattedData","data","series","unshift","Date","xaxis","toLocaleDateString","slice","getAllProjectData","allData","projectData","DownloadCSV","onClick","csv","forEach","row","downloads","console","log","hiddenElement","document","createElement","href","encodeURI","target","download","click","Chart","Grid","item","s","md","className","ResponsiveContainer","width","height","BarChart","Bar","type","dataKey","stroke","fill","XAxis","tick","YAxis","Tooltip","AllNfts","projectsData","container","spacing","map","NftsByCategory","category","filter","App","useState","setProjectsData","useEffect","style","backgroundColor","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63f65c1c.chunk.js","sourcesContent":["export const projects = [\n\t{project: \"opensea\", chain: \"ethereum\"},\n\t{project: \"magic-eden\", chain: \"solana\"},\n\t{project: \"atomicmarket\", chain: \"wax\"},\n\t{project: \"decentraland\", chain: \"ethereum\"},\n\t{project: \"solanart\", chain: \"solana\"},\n\t{project: \"rarible\", chain: \"ethereum\"},\n\t{project: \"the-sandbox-marketplace\", chain: \"ethereum\"},\n\t{project: \"nftrade\", chain: \"avalanche\"},\n\t{project: \"nftrade\", chain: \"ethereum\"},\n\t{project: \"nftrade\", chain: \"binance-smart-chain\"},\n\t{project: \"nftrade\", chain: \"polygon\"},\n\t{project: \"superrare-co\", chain: \"ethereum\"},\n\t{project: \"foundation\", chain: \"ethereum\"},\n\t{project: \"solsea\", chain: \"solana\"},\n\t{project: \"hic-et-nunc\", chain: \"tezos\"},\n\t{project: \"treasureland\", chain: \"ethereum\"},\n\t{project: \"treasureland\", chain: \"binance-smart-chain\"},\n\t{project: \"treasureland\", chain: \"polygon\"},\n\t{project: \"mochi-market\", chain: \"binance-smart-chain\"},\n\t{project: \"playdapp-marketplace\", chain: \"polygon\"},\n\t{project: \"objkt-com\", chain: \"tezos\"},\n\t{project: \"digitaleyes-market\", chain: \"solana\"},\n\t{project: \"airnfts\", chain: \"binance-smart-chain\"},\n\t{project: \"altura-nft-marketplace\", chain: \"binance-smart-chain\"},\n\t{project: \"kalamint\", chain: \"tezos\"},\n];","export const weeklyFromDaily = (dailyData) => {\n  dailyData.splice(0, (dailyData.length % 7));\n\tlet weeklyData = [];\n\tlet currData = {\n\t\tvolume: 0,\n\t\tday: dailyData[0].day,\n\t};\n\tfor (let i = 0; i < dailyData.length; i++) {\n    if (i % 7 == 0) {\n      if (i != 0) {\n        weeklyData.push(currData);\n        currData = {\n          volume: 0,\n          day: dailyData[i].day,\n        };\n      }\n    }\n    currData.volume += dailyData[i].volume;\n\t}\n  weeklyData.push(currData);\n  return weeklyData;\n}","import axios from \"axios\";\nimport { weeklyFromDaily } from \"./downloadAgg\";\n\naxios.defaults.headers.post['Content-Type'] ='application/json;charset=utf-8';\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n\nexport const getProjectData = async (chain, marketplace) => {\n\tlet marketplaceData = await axios.get(`https://dappradar.com/v2/api/dapp/${chain}/marketplaces/${marketplace}/chart/all?currency=USD`)\n\tlet formattedData = [];\n\tfor (let i = 0; i < marketplaceData.data.series[1].data.length; i++) {\n\t\tformattedData.unshift({volume: marketplaceData.data.series[1].data[i], day: new Date(marketplaceData.data.xaxis[i]).toLocaleDateString(\"en-US\")});\n\t}\n\treturn weeklyFromDaily(formattedData.slice(-365));\n}\n\nexport const getAllProjectData = async (projects) => {\n\tconst allData = [];\n\tfor (let i = 0; i < projects.length; i++) {\n\t\tconst projectData = await getProjectData(projects[i].chain, projects[i].project);\n\t\tallData.push({project: projects[i].project, chain: projects[i].chain, data: projectData});\n\t}\n\treturn allData;\n}","export const DownloadCSV = (data, project) => {\n\tconst downloadCSVClick = () => {\n\t\tvar csv = 'Downloads,Week\\n';\n\t\tdata.data.forEach((row) => {\n\t\t\tcsv += [row.downloads, row.day, ','];\n\t\t\tcsv += \"\\n\";\n\t\t});\n\n    console.log(csv);\n\t\tvar hiddenElement = document.createElement('a');\n\t\thiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n\t\thiddenElement.target = \"_blank\";\n\t\thiddenElement.download = `${data.project}.csv`;\n\t\thiddenElement.click();\n\t}\n\n\treturn (\n\t\t<button onClick={downloadCSVClick}>Download CSV</button>\n\t);\n}\n","import { useEffect, useState } from \"react\";\nimport \"./chart.css\";\n\nimport { getProjectData } from \"../helpers/getProjectData\";\nimport { weeklyFromDaily } from \"../helpers/downloadAgg\";\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from \"recharts\";\nimport { Grid } from \"@material-ui/core\";\nimport { DownloadCSV } from \"./DownloadCSV\";\n\nexport const Chart = ({ project, chain, data }) => {\n  return (\n    <Grid item s={12} md={6}>\n      <div className=\"chart\">\n        <div className=\"chart-head\">\n          <h2 className=\"title\">{project}</h2>\n          <h2 className=\"chain\">{chain}</h2>\n          <DownloadCSV data={data} project={project} />\n        </div>\n        <ResponsiveContainer width=\"75%\" height={300}>\n          <BarChart\n            data={data}\n          >\n            <Bar\n              type=\"monotone\"\n              dataKey=\"volume\"\n              stroke=\"#C49662\"\n              fill=\"#C49662\"\n            />\n            <XAxis\n              dataKey=\"day\"\n              tick={{ fill: \"#B6B8C0\" }}\n              stroke=\"#B6B8C0\"\n            />\n            <YAxis\n              tick={{ fill: \"#B6B8C0\" }}\n              stroke=\"#B6B8C0\"\n            />\n            <Tooltip />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </Grid>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { Chart } from \"../../components/Chart\";\nimport \"./AllNfts.css\";\n\nexport const AllNfts = ({ projectsData }) => {\n\treturn (\n    <div className=\"charts-body\">\n      <h2 className=\"dash-title\">NFT Volume Dashboard</h2>\n      {projectsData ? (\n        <Grid container spacing={2}>\n          {projectsData.map(project => {\n            return (\n              <Chart project={project.project} chain={project.chain} data={project.data} />\n            );\n          })}\n        </Grid>\n      ) : (\n        <>Loading...</>\n      )}\n    </div>\n  );\n}","import { Grid } from \"@material-ui/core\";\nimport { Chart } from \"../../components/Chart\";\nimport \"./NftsByCategory.css\";\n\nexport const NftsByCategory = ({ projectsData, category }) => {\n\treturn (\n    <div className=\"charts-body\">\n      <h2 className=\"dash-title\">NFT Volume Dashboard</h2>\n      {projectsData ? (\n        <Grid container spacing={2}>\n          {projectsData.filter(project => project.chain == category).map(project => {\n            return (\n              <Chart project={project.project} chain={project.chain} data={project.data} />\n            );\n          })}\n        </Grid>\n      ) : (\n        <>Loading...</>\n      )}\n    </div>\n  );\n}","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { projects } from \"./projects\";\nimport { useEffect, useState } from \"react\";\nimport { getAllProjectData } from \"./helpers/getProjectData\";\nimport { useSelector } from \"react-redux\";\nimport { AllNfts } from \"./Views/AllNfts/AllNfts\";\nimport { NftsByCategory } from \"./Views/NftsByCategory/NftsByCategory\";\nimport \"./App.css\";\n\nexport const App = () => {\n  const [projectsData, setProjectsData] = useState();\n\n  useEffect(() => {\n    (async () => {\n      const data = await getAllProjectData(projects);\n      setProjectsData(data);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"#3D4875\" }}>\n      <Router>\n        <Routes>\n          <Route exact path=\"/Nft-Data\" element={<AllNfts projectsData={projectsData} />} />\n          <Route exact path=\"Nft-Data/ethereum\" element={<NftsByCategory projectsData={projectsData} category=\"ethereum\" />} />\n          <Route exact path=\"/Nft-Data/solana\" element={<NftsByCategory projectsData={projectsData} category=\"solana\" />} />\n          <Route exact path=\"/Nft-Data/binance-smart-chain\" element={<NftsByCategory projectsData={projectsData} category=\"binance-smart-chain\" />} />\n          <Route exact path=\"/Nft-Data/avalanche\" element={<NftsByCategory projectsData={projectsData} category=\"avalanche\" />} />\n          <Route exact path=\"/Nft-Data/polygon\" element={<NftsByCategory projectsData={projectsData} category=\"polygon\" />} />\n          <Route exact path=\"/Nft-Data/tezos\" element={<NftsByCategory projectsData={projectsData} category=\"tezos\" />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}