{"version":3,"sources":["projects.js","helpers/downloadAgg.js","helpers/getProjectData.js","components/DownloadCSV.jsx","components/Chart.jsx","Views/AllNfts/AllNfts.jsx","components/StackedBar.jsx","Views/NftsByCategory/NftsByCategory.jsx","helpers/chainVolByWeek.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["projects","project","chain","weeklyFromDaily","dailyData","splice","length","weeklyData","currData","volume","day","i","push","getProjectData","marketplace","a","axios","get","withCredentials","marketplaceData","formattedData","data","series","unshift","Date","xaxis","toLocaleDateString","slice","getAllProjectData","allData","projectData","DownloadCSV","onClick","csv","forEach","row","downloads","console","log","hiddenElement","document","createElement","href","encodeURI","target","download","click","Chart","Grid","item","s","md","className","ResponsiveContainer","width","height","BarChart","Bar","type","dataKey","stroke","fill","XAxis","tick","YAxis","Tooltip","AllNfts","projectsData","container","spacing","map","toPercent","decimal","fixed","toFixed","StackedBar","tickFormatter","NftsByCategory","category","useState","totalVolByWeek","setTotalVolByWeek","setProjects","useEffect","chainData","filter","minLength","flattenedData","j","chainVolByWeek","listOfProjects","App","setProjectsData","style","backgroundColor","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.80ed3fb9.chunk.js","sourcesContent":["export const projects = [\n\t{project: \"opensea\", chain: \"ethereum\"},\n\t{project: \"magic-eden\", chain: \"solana\"},\n\t{project: \"atomicmarket\", chain: \"wax\"},\n\t{project: \"decentraland\", chain: \"ethereum\"},\n\t{project: \"solanart\", chain: \"solana\"},\n\t{project: \"rarible\", chain: \"ethereum\"},\n\t{project: \"the-sandbox-marketplace\", chain: \"ethereum\"},\n\t{project: \"nftrade\", chain: \"avalanche\"},\n\t{project: \"nftrade\", chain: \"ethereum\"},\n\t{project: \"nftrade\", chain: \"binance-smart-chain\"},\n\t{project: \"nftrade\", chain: \"polygon\"},\n\t{project: \"superrare-co\", chain: \"ethereum\"},\n\t{project: \"foundation\", chain: \"ethereum\"},\n\t{project: \"solsea\", chain: \"solana\"},\n\t{project: \"hic-et-nunc\", chain: \"tezos\"},\n\t{project: \"treasureland\", chain: \"ethereum\"},\n\t{project: \"treasureland\", chain: \"binance-smart-chain\"},\n\t{project: \"treasureland\", chain: \"polygon\"},\n\t{project: \"mochi-market\", chain: \"binance-smart-chain\"},\n\t{project: \"playdapp-marketplace\", chain: \"polygon\"},\n\t{project: \"objkt-com\", chain: \"tezos\"},\n\t{project: \"digitaleyes-market\", chain: \"solana\"},\n\t{project: \"airnfts\", chain: \"binance-smart-chain\"},\n\t{project: \"altura-nft-marketplace\", chain: \"binance-smart-chain\"},\n\t{project: \"kalamint\", chain: \"tezos\"},\n];","export const weeklyFromDaily = (dailyData) => {\n  dailyData.splice(0, (dailyData.length % 7));\n\tlet weeklyData = [];\n\tlet currData = {\n\t\tvolume: 0,\n\t\tday: dailyData[0].day,\n\t};\n\tfor (let i = 0; i < dailyData.length; i++) {\n    if (i % 7 == 0) {\n      if (i != 0) {\n        weeklyData.push(currData);\n        currData = {\n          volume: 0,\n          day: dailyData[i].day,\n        };\n      }\n    }\n    currData.volume += dailyData[i].volume;\n\t}\n  weeklyData.push(currData);\n  return weeklyData;\n}","import axios from \"axios\";\nimport { weeklyFromDaily } from \"./downloadAgg\";\n\nexport const getProjectData = async (chain, marketplace) => {\n\tlet marketplaceData = await axios.get(`https://dappradar.com/v2/api/dapp/${chain}/marketplaces/${marketplace}/chart/all?currency=USD`, { withCredentials: true });\n\tlet formattedData = [];\n\tfor (let i = 0; i < marketplaceData.data.series[1].data.length; i++) {\n\t\tformattedData.unshift({volume: marketplaceData.data.series[1].data[i], day: new Date(marketplaceData.data.xaxis[i]).toLocaleDateString(\"en-US\")});\n\t}\n\treturn weeklyFromDaily(formattedData.slice(-365));\n}\n\nexport const getAllProjectData = async (projects) => {\n\tconst allData = [];\n\tfor (let i = 0; i < projects.length; i++) {\n\t\tconst projectData = await getProjectData(projects[i].chain, projects[i].project);\n\t\tallData.push({project: projects[i].project, chain: projects[i].chain, data: projectData});\n\t}\n\treturn allData;\n}","export const DownloadCSV = (data, project) => {\n\tconst downloadCSVClick = () => {\n\t\tvar csv = 'Downloads,Week\\n';\n\t\tdata.data.forEach((row) => {\n\t\t\tcsv += [row.downloads, row.day, ','];\n\t\t\tcsv += \"\\n\";\n\t\t});\n\n    console.log(csv);\n\t\tvar hiddenElement = document.createElement('a');\n\t\thiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n\t\thiddenElement.target = \"_blank\";\n\t\thiddenElement.download = `${data.project}.csv`;\n\t\thiddenElement.click();\n\t}\n\n\treturn (\n\t\t<button onClick={downloadCSVClick}>Download CSV</button>\n\t);\n}\n","import { useEffect, useState } from \"react\";\nimport \"./chart.css\";\n\nimport { getProjectData } from \"../helpers/getProjectData\";\nimport { weeklyFromDaily } from \"../helpers/downloadAgg\";\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from \"recharts\";\nimport { Grid } from \"@material-ui/core\";\nimport { DownloadCSV } from \"./DownloadCSV\";\n\nexport const Chart = ({ project, chain, data }) => {\n  return (\n    <Grid item s={12} md={6}>\n      <div className=\"chart\">\n        <div className=\"chart-head\">\n          <h2 className=\"title\">{project}</h2>\n          <h2 className=\"chain\">{chain}</h2>\n          <DownloadCSV data={data} project={project} />\n        </div>\n        <ResponsiveContainer width=\"75%\" height={300}>\n          <BarChart\n            data={data}\n          >\n            <Bar\n              type=\"monotone\"\n              dataKey=\"volume\"\n              stroke=\"#C49662\"\n              fill=\"#C49662\"\n            />\n            <XAxis\n              dataKey=\"day\"\n              tick={{ fill: \"#B6B8C0\" }}\n              stroke=\"#B6B8C0\"\n            />\n            <YAxis\n              tick={{ fill: \"#B6B8C0\" }}\n              stroke=\"#B6B8C0\"\n            />\n            <Tooltip />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </Grid>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { Chart } from \"../../components/Chart\";\nimport \"./AllNfts.css\";\n\nexport const AllNfts = ({ projectsData }) => {\n\treturn (\n    <div className=\"charts-body\">\n      <h2 className=\"dash-title\">NFT Volume Dashboard</h2>\n      {projectsData ? (\n        <Grid container spacing={2}>\n          {projectsData.map(project => {\n            return (\n              <Chart project={project.project} chain={project.chain} data={project.data} />\n            );\n          })}\n        </Grid>\n      ) : (\n        <>Loading...</>\n      )}\n    </div>\n  );\n}","import \"./chart.css\";\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from \"recharts\";\nimport { Grid } from \"@material-ui/core\";\nimport { DownloadCSV } from \"./DownloadCSV\";\n\nconst toPercent = (decimal, fixed=0) => {\n  return `${(decimal * 100).toFixed(fixed)}%`;\n};\n\nexport const StackedBar = ({ data, projects, chain }) => {\n  return (\n    <Grid item s={12} md={6}>\n      <div className=\"chart\">\n        <div className=\"chart-head\">\n          <h2 className=\"title\">{chain} % Vol</h2>\n          <h2 className=\"chain\">{chain}</h2>\n          <DownloadCSV data={data} project={chain} />\n        </div>\n        <ResponsiveContainer width=\"75%\" height={300}>\n          <BarChart\n            data={data}\n          >\n            {projects.map(project => {\n              return (\n                <Bar\n                  type=\"montone\"\n                  dataKey={project}\n                />\n              );\n            })}\n            <XAxis\n              dataKey=\"day\"\n              tick={{ fill: \"#B6B8C0\" }}\n              stroke=\"#B6B8C0\"\n            />\n            <YAxis\n              tick={{ fill: \"#B6B8C0\" }}\n              tickFormatter={toPercent}\n              stroke=\"#B6B8C0\"\n            />\n            <Tooltip />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </Grid>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { Chart } from \"../../components/Chart\";\nimport { StackedBar } from \"../../components/StackedBar\";\nimport { chainVolByWeek } from \"../../helpers/chainVolByWeek\";\nimport { useState, useEffect } from \"react\";\nimport \"./NftsByCategory.css\";\n\nexport const NftsByCategory = ({ projectsData, category }) => {\n  const [totalVolByWeek, setTotalVolByWeek] = useState();\n  const [projects, setProjects] = useState();\n\n  useEffect(() => {\n    if (projectsData) {\n      setTotalVolByWeek(chainVolByWeek(category, projectsData));\n\n      let listOfProjects = projectsData.map(project => {\n        return project.project;\n      });\n      setProjects(listOfProjects);\n    }\n  }, [projectsData]);\n\n\treturn (\n    <div className=\"charts-body\">\n      <h2 className=\"dash-title\">NFT Volume Dashboard</h2>\n      {projectsData ? (\n        <Grid container spacing={2}>\n          <StackedBar data={totalVolByWeek} projects={projects} chain={category} />\n          {projectsData.filter(project => project.chain == category).map(project => {\n            return (\n              <Chart key={project.project} project={project.project} chain={project.chain} data={project.data} />\n            );\n          })}\n        </Grid>\n      ) : (\n        <>Loading...</>\n      )}\n    </div>\n  );\n}\n","export const chainVolByWeek = (chain, projectsData) => {\n\tconst chainData = projectsData.filter(project => project.chain == chain);\n\tlet minLength = 999999;\n\tfor (let i = 0; i < chainData.length; i++) {\n\t\tif (chainData[i].data.length < minLength) {\n\t\t\tminLength = chainData[i].data.length;\n\t\t}\n\t}\n\n\tfor (let i = 0; i < chainData.length; i++) {\n\t\tchainData[i].data = chainData[i].data.slice(-1 * minLength)\n\t}\n\n\tlet flattenedData = [];\n\tlet currData = {};\n\tfor (let i = 1; i < minLength; i++) {\n\t\tfor (let j = 0; j < chainData.length; j++) {\n\t\t\tcurrData[chainData[j].project] = chainData[j].data[i].volume;\n\t\t}\n\t\tcurrData[\"day\"] = chainData[0].data[i].day;\n\t\tflattenedData.push(currData);\n\t\tcurrData = {};\n\t}\n\treturn(flattenedData);\n}\n","import { HashRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { projects } from \"./projects\";\nimport { useEffect, useState } from \"react\";\nimport { getAllProjectData } from \"./helpers/getProjectData\";\nimport { useSelector } from \"react-redux\";\nimport { AllNfts } from \"./Views/AllNfts/AllNfts\";\nimport { NftsByCategory } from \"./Views/NftsByCategory/NftsByCategory\";\nimport \"./App.css\";\n\nexport const App = () => {\n  const [projectsData, setProjectsData] = useState();\n\n  useEffect(() => {\n    (async () => {\n      const data = await getAllProjectData(projects);\n      setProjectsData(data);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"#3D4875\" }}>\n      <Router>\n        <Routes>\n          <Route exact path=\"/Nft-Data\" element={<AllNfts projectsData={projectsData} />} />\n          <Route exact path=\"/Nft-Data/ethereum\" element={<NftsByCategory projectsData={projectsData} category=\"ethereum\" />} />\n          <Route exact path=\"/Nft-Data/solana\" element={<NftsByCategory projectsData={projectsData} category=\"solana\" />} />\n          <Route exact path=\"/Nft-Data/binance-smart-chain\" element={<NftsByCategory projectsData={projectsData} category=\"binance-smart-chain\" />} />\n          <Route exact path=\"/Nft-Data/avalanche\" element={<NftsByCategory projectsData={projectsData} category=\"avalanche\" />} />\n          <Route exact path=\"/Nft-Data/polygon\" element={<NftsByCategory projectsData={projectsData} category=\"polygon\" />} />\n          <Route exact path=\"/Nft-Data/tezos\" element={<NftsByCategory projectsData={projectsData} category=\"tezos\" />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}